{"tokens": ["import", "{", "Injectable", "}", "from", "\"@angular/core\"", ";", "import", "{", "HttpClient", ",", "HttpErrorResponse", ",", "HttpHeaders", ",", "HttpParams", "}", "from", "\"@angular/common/http\"", ";", "import", "{", "Response", ",", "ResponseContentType", ",", "Jsonp", "}", "from", "'@angular/http'", ";", "import", "{", "Router", "}", "from", "\"@angular/router\"", ";", "import", "{", "Observable", "}", "from", "\"rxjs/Observable\"", ";", "import", "{", "ISubscription", "}", "from", "\"rxjs/Subscription\"", ";", "import", "\"rxjs/add/operator/catch\"", ";", "import", "\"rxjs/add/operator/do\"", ";", "import", "{", "JobAnswer", ",", "JobBody", ",", "Format", ",", "Type", ",", "JobStatus", ",", "AccessToken", "}", "from", "\"./revit-converter.models\"", ";", "@", "Injectable", "(", ")", "export", "class", "RevitConverterService", "{", "errorMessage", ":", "string", ";", "private", "_baseUrl", "=", "\"https://developer.api.autodesk.com/modelderivative/v2/designdata/\"", ";", "constructor", "(", "private", "_http", ",", "private", "router", ")", "{", "}", "public", "setDelay", "(", "delay", ")", "{", "setTimeout", "(", "function", "(", ")", "{", "console", ".", "log", "(", "delay", ")", ";", "}", ",", "delay", ")", ";", "}", "public", "PostJobRequest", "(", "access_token", ",", "objectId", ")", "{", "let", "body", "=", "'{\"input\": {\"urn\": \"'", "+", "btoa", "(", "objectId", ")", ".", "replace", "(", "/=+$/", ",", "\"\"", ")", "+", "'\"},\"output\": {\"formats\": [{\"type\": \"ifc\"}]}}'", ";", "return", "this", ".", "_http", ".", "post", "<", "JobAnswer", ">", "(", "this", ".", "_baseUrl", "+", "\"job\"", ",", "body", ",", "{", "headers", ":", "new", "HttpHeaders", "(", ")", ".", "set", "(", "\"Authorization\"", ",", "\"Bearer \"", "+", "access_token", ")", ".", "set", "(", "\"Content-Type\"", ",", "\"application/json\"", ")", "}", ")", ".", "do", "(", "data", "=>", "console", ".", "log", "(", "\"All PostJobRequest: \"", "+", "JSON", ".", "stringify", "(", "data", ")", ")", ")", ".", "catch", "(", "this", ".", "handleError", ")", ";", "}", "public", "GetJobStatus", "(", "access_token", ",", "urn", ")", "{", "return", "this", ".", "_http", ".", "get", "<", "JobStatus", ">", "(", "this", ".", "_baseUrl", "+", "urn", "+", "\"/manifest\"", ",", "{", "headers", ":", "new", "HttpHeaders", "(", ")", ".", "set", "(", "\"Authorization\"", ",", "\"Bearer \"", "+", "access_token", ")", "}", ")", ".", "do", "(", "data", "=>", "console", ".", "log", "(", "\"All GetJobStatus: \"", "+", "JSON", ".", "stringify", "(", "data", ")", ")", ")", ".", "catch", "(", "this", ".", "handleError", ")", ";", "}", "public", "GetDerivative", "(", "access_token", ",", "urn", ",", "derivative", ")", "{", "return", "this", ".", "_http", ".", "get", "<", "any", ">", "(", "this", ".", "_baseUrl", "+", "urn", "+", "\"/manifest/\"", "+", "derivative", ",", "{", "headers", ":", "new", "HttpHeaders", "(", ")", ".", "set", "(", "\"Authorization\"", ",", "\"Bearer \"", "+", "access_token", ")", ",", "responseType", ":", "'blob'", "as", "'json'", "}", ")", ".", "catch", "(", "this", ".", "handleError", ")", ";", "}", "public", "downloadFile", "(", "data", ",", "fileName", ")", "{", "let", "blob", "=", "new", "Blob", "(", "[", "data", "]", ",", "{", "type", ":", "\"text/csv\"", "}", ")", ";", "let", "link", "=", "document", ".", "createElement", "(", "'a'", ")", ";", "link", ".", "href", "=", "window", ".", "URL", ".", "createObjectURL", "(", "blob", ")", ";", "link", ".", "download", "=", "fileName", ";", "link", ".", "click", "(", ")", ";", "}", "public", "GetAccessToken", "(", ")", "{", "return", "this", ".", "_http", ".", "get", "<", "AccessToken", ">", "(", "\"https://forgefunction.azurewebsites.net/api/ForgeToken\"", ",", "{", "}", ")", ".", "do", "(", "data", "=>", "console", ".", "log", "(", "\"You have a token!\"", ")", ")", ".", "catch", "(", "this", ".", "handleError", ")", ";", "}", "/**\n     * ConvertConversionProgress\n     */", "public", "ConvertConversionProgress", "(", "progress", ")", "{", "let", "value", "=", "Number", "(", "progress", ".", "match", "(", "/^\\d*/", ")", ")", "as", "number", ";", "return", "value", ";", "}", "DeleteBucket", "(", "access_token", ",", "bucketId", ")", "{", "return", "(", "this", ".", "_http", ".", "delete", "<", "any", ">", "(", "\"https://developer.api.autodesk.com/oss/v2/buckets/\"", "+", "bucketId", ",", "{", "headers", ":", "new", "HttpHeaders", "(", ")", ".", "set", "(", "\"Authorization\"", ",", "\"Bearer \"", "+", "access_token", ")", "}", ")", ".", "catch", "(", "this", ".", "handleError", ")", ")", ";", "}", "private", "handleError", "(", "err", ")", "{", "let", "errorMessage", "=", "\"\"", ";", "if", "(", "err", ".", "error", "instanceof", "Error", ")", "{", "errorMessage", "=", "`An error occurred: ${", "err", ".", "error", ".", "message", "}`", ";", "}", "else", "{", "errorMessage", "=", "`Server returned code: ${", "err", ".", "status", "}, error message is: ${", "err", ".", "message", "}`", ";", "}", "console", ".", "log", "(", "errorMessage", ")", ";", "return", "Observable", ".", "throw", "(", "errorMessage", ")", ";", "}", "}"], "labels": [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "HttpClient", null, null, "Router", null, null, null, null, "void", null, "number", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "Observable", null, "string", null, "string", null, null, null, "string", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "Observable", null, "string", null, "string", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "Observable", null, "string", null, "string", null, "string", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "Response", null, "string", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "Observable", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "number", null, "string", null, null, null, "number", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "Observable", null, "string", null, "string", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "HttpErrorResponse", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], "url": "https://github.com/simonmoreau/RevitToIFC", "path": "RevitToIFC/src/app/revit-converter/revit-converter.service.ts", "commit_hash": "b532fcf50e0894c844f36068c436848fdbebeb29", "file": "revit-converter.service.ts"}
{"tokens": ["import", "{", "Component", ",", "OnInit", "}", "from", "\"@angular/core\"", ";", "import", "{", "FileUploader", ",", "FileUploaderOptions", ",", "Headers", ",", "FileItem", ",", "ParsedResponseHeaders", "}", "from", "\"ng2-file-upload\"", ";", "import", "{", "RevitConverterService", "}", "from", "\"./revit-converter.service\"", ";", "import", "{", "ConversionJob", ",", "UploadAnswer", ",", "FormDataStatus", "}", "from", "\"./revit-converter.models\"", ";", "const", "baseUrl", "=", "\"https://developer.api.autodesk.com/oss/v2/buckets/\"", ";", "@", "Component", "(", "{", "selector", ":", "\"app-revit-converter\"", ",", "templateUrl", ":", "\"./revit-converter.component.html\"", ",", "styleUrls", ":", "[", "\"./revit-converter.component.scss\"", "]", ",", "providers", ":", "[", "RevitConverterService", "]", "}", ")", "export", "class", "RevitConverterComponent", "implements", "OnInit", "{", "public", "uploader", ":", "FileUploader", "=", "new", "FileUploader", "(", "{", "disableMultipart", ":", "true", "}", ")", ";", "public", "uploaderOptions", ":", "FileUploaderOptions", ";", "public", "hasBaseDropZoneOver", ":", "boolean", "=", "false", ";", "public", "hasAnotherDropZoneOver", ":", "boolean", "=", "false", ";", "public", "access_token", "=", "\"\"", ";", "constructor", "(", "private", "_revitConverterService", ")", "{", "}", "ngOnInit", "(", ")", "{", "this", ".", "_revitConverterService", ".", "GetAccessToken", "(", ")", ".", "subscribe", "(", "token", "=>", "{", "this", ".", "access_token", "=", "token", ".", "access_token", ";", "this", ".", "uploader", ".", "onBeforeUploadItem", "=", "item", "=>", "{", "item", ".", "method", "=", "\"PUT\"", ";", "item", ".", "url", "=", "baseUrl", "+", "\"revittoifcbucket/objects/\"", "+", "Date", ".", "now", "(", ")", ".", "toString", "(", ")", "+", "\"_\"", "+", "item", ".", "file", ".", "name", ";", "let", "headers", "=", "[", "{", "name", ":", "\"Authorization\"", ",", "value", ":", "\"Bearer \"", "+", "this", ".", "access_token", "}", ",", "{", "name", ":", "\"Content-Type\"", ",", "value", ":", "\"application/octet-stream\"", "}", "]", ";", "item", ".", "headers", "=", "headers", ";", "let", "itemStatus", "=", "{", "intervalId", ":", "null", ",", "status", ":", "\"Uploading\"", ",", "urn", ":", "\"\"", ",", "derivativeUrn", ":", "\"\"", "}", ";", "item", ".", "formData", "=", "itemStatus", ";", "}", ";", "this", ".", "uploader", ".", "onAfterAddingFile", "=", "(", "item", ")", "=>", "{", "let", "extension", "=", "item", ".", "file", ".", "name", ".", "split", "(", "\".\"", ")", ".", "pop", "(", ")", ";", "if", "(", "extension", "!==", "\"rvt\"", ")", "{", "item", ".", "remove", "(", ")", ";", "}", "}", ";", "this", ".", "uploader", ".", "onCompleteItem", "=", "(", "item", ",", "response", ",", "status", ",", "headers", ")", "=>", "{", "console", ".", "log", "(", "response", ")", ";", "let", "uploadResponse", "=", "JSON", ".", "parse", "(", "response", ")", ";", "this", ".", "_revitConverterService", ".", "PostJobRequest", "(", "this", ".", "access_token", ",", "uploadResponse", ".", "objectId", ")", ".", "subscribe", "(", "answer", "=>", "{", "this", ".", "_revitConverterService", ".", "GetJobStatus", "(", "this", ".", "access_token", ",", "answer", ".", "urn", ")", ".", "subscribe", "(", "jobStatus1", "=>", "{", "let", "itemStatus", "=", "{", "intervalId", ":", "null", ",", "status", ":", "\"Converting\"", ",", "urn", ":", "answer", ".", "urn", ",", "derivativeUrn", ":", "\"\"", "}", ";", "item", ".", "formData", "=", "itemStatus", ";", "if", "(", "jobStatus1", ".", "derivatives", ".", "length", "===", "0", ")", "{", "let", "interval", "=", "setInterval", "(", "this", ".", "UpdateJobStatus", ",", "2000", ",", "this", ".", "access_token", ",", "answer", ".", "urn", ",", "this", ".", "_revitConverterService", ",", "item", ")", ";", "item", ".", "formData", ".", "intervalId", "=", "interval", ";", "}", "else", "{", "if", "(", "jobStatus1", ".", "status", "===", "\"failed\"", ")", "{", "itemStatus", ".", "status", "=", "\"Failed\"", ";", "}", "else", "{", "itemStatus", ".", "status", "=", "\"Complete\"", ";", "let", "derivativeUrn", "=", "jobStatus1", ".", "derivatives", ".", "filter", "(", "derivative", "=>", "derivative", ".", "outputType", "===", "\"ifc\"", ")", "[", "0", "]", ".", "children", "[", "0", "]", ".", "urn", ";", "itemStatus", ".", "derivativeUrn", "=", "derivativeUrn", ";", "}", "}", "}", ",", "error", "=>", "(", "this", ".", "_revitConverterService", ".", "errorMessage", "=", "<", "any", ">", "error", ")", ")", ";", "}", ",", "error", "=>", "(", "this", ".", "_revitConverterService", ".", "errorMessage", "=", "<", "any", ">", "error", ")", ")", ";", "}", ";", "}", ",", "error", "=>", "(", "this", ".", "_revitConverterService", ".", "errorMessage", "=", "<", "any", ">", "error", ")", ")", ";", "}", "/**\n     * UpdateJobStatus\n     */", "public", "UpdateJobStatus", "(", "access_token", ",", "urn", ",", "service", ",", "item", ")", "{", "service", ".", "GetJobStatus", "(", "access_token", ",", "urn", ")", ".", "subscribe", "(", "jobCurrentStatus", "=>", "{", "let", "itemStatus", "=", "item", ".", "formData", ";", "if", "(", "jobCurrentStatus", ".", "derivatives", ".", "length", "===", "0", ")", "{", "let", "conversionProgress", "=", "jobCurrentStatus", ".", "progress", ".", "match", "(", "new", "RegExp", "(", "\"\\\\d*%\"", ")", ")", "[", "0", "]", ";", "itemStatus", ".", "status", "=", "\"Converting \"", "+", "conversionProgress", ";", "}", "else", "{", "if", "(", "jobCurrentStatus", ".", "status", "===", "\"failed\"", ")", "{", "itemStatus", ".", "status", "=", "\"Failed\"", ";", "}", "else", "{", "itemStatus", ".", "status", "=", "\"Complete\"", ";", "let", "derivativeUrn", "=", "jobCurrentStatus", ".", "derivatives", ".", "filter", "(", "derivative", "=>", "derivative", ".", "outputType", "===", "\"ifc\"", ")", "[", "0", "]", ".", "children", "[", "0", "]", ".", "urn", ";", "itemStatus", ".", "derivativeUrn", "=", "derivativeUrn", ";", "}", "}", "}", ",", "error", "=>", "(", "this", ".", "_revitConverterService", ".", "errorMessage", "=", "<", "any", ">", "error", ")", ")", ";", "}", "/**\n     * Download file\n     */", "public", "DownloadFile", "(", "urn", ",", "derivative", ")", "{", "let", "fileName", "=", "derivative", ".", "replace", "(", "/^.*[\\\\\\/]/", ",", "\"\"", ")", ";", "fileName", "=", "fileName", ".", "replace", "(", "new", "RegExp", "(", "\"\\\\d*_\"", ")", ",", "\"\"", ")", ";", "this", ".", "_revitConverterService", ".", "GetDerivative", "(", "this", ".", "access_token", ",", "urn", ",", "derivative", ")", ".", "subscribe", "(", "data", "=>", "this", ".", "_revitConverterService", ".", "downloadFile", "(", "data", ",", "fileName", ")", ")", ";", "}", "/**\n     * DeleteBuckets\n     */", "public", "DeleteBuckets", "(", ")", "{", "let", "bucketsNames", "=", "[", "\"bucketname\"", "]", ";", "bucketsNames", ".", "forEach", "(", "bucketsName", "=>", "{", "this", ".", "_revitConverterService", ".", "DeleteBucket", "(", "this", ".", "access_token", ",", "bucketsName", ")", ".", "subscribe", "(", "response", "=>", "{", "console", ".", "log", "(", "bucketsName", "+", "response", ")", ";", "}", ",", "error", "=>", "(", "this", ".", "_revitConverterService", ".", "errorMessage", "=", "<", "any", ">", "error", ")", ")", ";", "}", ")", ";", "}", "public", "fileOverBase", "(", "e", ")", "{", "this", ".", "hasBaseDropZoneOver", "=", "e", ";", "}", "public", "fileOverAnother", "(", "e", ")", "{", "this", ".", "hasAnotherDropZoneOver", "=", "e", ";", "}", "}"], "labels": [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "UNK", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "array", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "UNK", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "FileItem", null, null, null, null, "string", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "FileItem", null, "string", null, "number", null, "ParsedResponseHeaders", null, null, null, null, null, null, null, null, null, null, null, "UNK", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "UNK", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "string", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "void", null, "string", null, "string", null, "UNK", null, "FileItem", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "UNK", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "string", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "string", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "string", null, "string", null, null, null, "string", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "array", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "void", null, null, null, null, null, null, null, null, null, null, null, null, "void", null, null, null, null, null, null, null, null, null, null, null, null], "url": "https://github.com/simonmoreau/RevitToIFC", "path": "RevitToIFC/src/app/revit-converter/revit-converter.component.ts", "commit_hash": "b532fcf50e0894c844f36068c436848fdbebeb29", "file": "revit-converter.component.ts"}
{"tokens": ["import", "{", "Injectable", "}", "from", "'@angular/core'", ";", "import", "{", "Http", ",", "Headers", ",", "RequestOptions", "}", "from", "'@angular/http'", ";", "import", "'rxjs/add/operator/map'", ";", "@", "Injectable", "(", ")", "export", "class", "DataService", "{", "result", ":", "any", ";", "constructor", "(", "private", "_http", ")", "{", "}", "getUsers", "(", ")", "{", "return", "this", ".", "_http", ".", "get", "(", "\"/api/users\"", ")", ".", "map", "(", "result", "=>", "this", ".", "result", "=", "result", ".", "json", "(", ")", ".", "data", ")", ";", "}", "}"], "labels": [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "Http", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], "url": "https://github.com/designcourse/mean4plus", "path": "mean4plus/src/app/data.service.ts", "commit_hash": "133737359e132eb455c288fbedc27beac6fe9065", "file": "data.service.ts"}
{"tokens": ["import", "{", "Component", "}", "from", "'@angular/core'", ";", "import", "{", "DataService", "}", "from", "'./data.service'", ";", "@", "Component", "(", "{", "selector", ":", "'app-root'", ",", "templateUrl", ":", "'./app.component.html'", ",", "styleUrls", ":", "[", "'./app.component.css'", "]", "}", ")", "export", "class", "AppComponent", "{", "users", ":", "Array", "<", "any", ">", ";", "constructor", "(", "private", "_dataService", ")", "{", "this", ".", "_dataService", ".", "getUsers", "(", ")", ".", "subscribe", "(", "res", "=>", "this", ".", "users", "=", "res", ")", ";", "}", "}"], "labels": [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "DataService", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], "url": "https://github.com/designcourse/mean4plus", "path": "mean4plus/src/app/app.component.ts", "commit_hash": "133737359e132eb455c288fbedc27beac6fe9065", "file": "app.component.ts"}
{"tokens": ["import", "{", "Directive", ",", "ElementRef", ",", "Renderer2", ",", "Input", ",", "Output", ",", "EventEmitter", ",", "NgZone", ",", "OnChanges", ",", "AfterViewInit", ",", "OnDestroy", ",", "Inject", ",", "PLATFORM_ID", ",", "SimpleChanges", "}", "from", "'@angular/core'", ";", "import", "{", "ResizeObserver", "as", "ResizeObserverPonyfill", "}", "from", "'@juggle/resize-observer'", ";", "import", "{", "take", "}", "from", "'rxjs/operators'", ";", "import", "{", "Subject", "}", "from", "'rxjs'", ";", "import", "{", "isPlatformBrowser", "}", "from", "'@angular/common'", ";", "let", "ResizeObserver", "=", "ResizeObserverPonyfill", ";", "/**\n * Directive to truncate the contained text, if it exceeds the element's boundaries\n * and append characters (configurable, default '...') if so.\n */", "@", "Directive", "(", "{", "selector", ":", "'[ellipsis]'", ",", "exportAs", ":", "'ellipsis'", "}", ")", "export", "class", "EllipsisDirective", "implements", "OnChanges", ",", "OnDestroy", ",", "AfterViewInit", "{", "/**\n     * The original text (not truncated yet)\n     */", "private", "originalText", ":", "string", ";", "/**\n     * The referenced element\n     */", "private", "elem", ":", "any", ";", "/**\n     * Inner div element (will be auto-created)\n     */", "private", "innerElem", ":", "any", ";", "/**\n     * Anchor tag wrapping the `ellipsisCharacters`\n     */", "private", "moreAnchor", ":", "HTMLAnchorElement", ";", "private", "previousDimensions", ":", "{", "width", ":", "number", ";", "height", ":", "number", ";", "}", ";", "/**\n     * Subject triggered when resize listeners should be removed\n     */", "private", "removeResizeListeners$", "=", "new", "Subject", "<", "void", ">", "(", ")", ";", "/**\n     * Remove function for the currently registered click listener\n     * on the link `this.ellipsisCharacters` are wrapped in.\n     */", "private", "destroyMoreClickListener", ":", "(", ")", "=>", "void", ";", "/**\n     * The ellipsis html attribute\n     * If anything is passed, this will be used as a string to append to\n     * the truncated contents.\n     * Else '...' will be appended.\n     */", "@", "Input", "(", "'ellipsis'", ")", "ellipsisCharacters", ":", "string", ";", "/**\n     * The ellipsis-content html attribute\n     * If passed this is used as content, else contents\n     * are fetched from textContent\n     */", "@", "Input", "(", "'ellipsis-content'", ")", "ellipsisContent", ":", "string", "|", "number", "=", "null", ";", "/**\n     * The ellipsis-word-boundaries html attribute\n     * If anything is passed, each character will be interpreted\n     * as a word boundary at which the text may be truncated.\n     * Else the text may be truncated at any character.\n     */", "@", "Input", "(", "'ellipsis-word-boundaries'", ")", "ellipsisWordBoundaries", ":", "string", ";", "/**\n     * Function to use for string splitting. Defaults to the native `String#substr`.\n     * (This may for example be used to avoid splitting surrogate pairs- used by some emojis -\n     * by providing a lib such as runes.)\n     */", "@", "Input", "(", "'ellipsis-substr-fn'", ")", "ellipsisSubstrFn", ":", "(", "str", ":", "string", ",", "from", ":", "number", ",", "length", "?", ":", "number", ")", "=>", "string", ";", "/**\n     * The ellipsis-resize-detection html attribute\n     * Algorithm to use to detect element/window resize - any of the following:\n     * 'resize-observer': (default) Use native ResizeObserver - see\n     *    https://developer.mozilla.org/en-US/docs/Web/API/ResizeObserver\n     *    and https://github.com/juggle/resize-observer\n     * 'window': Only check if the whole window has been resized/changed orientation by using angular's built-in HostListener\n     */", "@", "Input", "(", "'ellipsis-resize-detection'", ")", "resizeDetectionStrategy", ":", "''", "|", "'manual'", "|", "'resize-observer'", "|", "'window'", ";", "/**\n     * The ellipsis-click-more html attribute\n     * If anything is passed, the ellipsisCharacters will be\n     * wrapped in <a></a> tags and an event handler for the\n     * passed function will be added to the link\n     */", "@", "Output", "(", "'ellipsis-click-more'", ")", "moreClickEmitter", ":", "EventEmitter", "<", "MouseEvent", ">", "=", "new", "EventEmitter", "(", ")", ";", "/**\n     * The ellipsis-change html attribute\n     * This emits after which index the text has been truncated.\n     * If it hasn't been truncated, null is emitted.\n     */", "@", "Output", "(", "'ellipsis-change'", ")", "changeEmitter", ":", "EventEmitter", "<", "number", ">", "=", "new", "EventEmitter", "(", ")", ";", "param", "max", "param", "callback", "return", "private", "static", "numericBinarySearch", "(", "max", ",", "callback", ")", "{", "let", "low", "=", "0", ";", "let", "high", "=", "max", ";", "let", "best", "=", "-", "1", ";", "let", "mid", ";", "while", "(", "low", "<=", "high", ")", "{", "mid", "=", "~", "~", "(", "(", "low", "+", "high", ")", "/", "2", ")", ";", "const", "result", "=", "callback", "(", "mid", ")", ";", "if", "(", "!", "result", ")", "{", "high", "=", "mid", "-", "1", ";", "}", "else", "{", "best", "=", "mid", ";", "low", "=", "mid", "+", "1", ";", "}", "}", "return", "best", ";", "}", "param", "input", "return", "private", "static", "convertEllipsisInputToString", "(", "input", ")", "{", "if", "(", "typeof", "input", "===", "'undefined'", "||", "input", "===", "null", ")", "{", "return", "''", ";", "}", "return", "String", "(", "input", ")", ";", "}", "/**\n     * The directive's constructor\n     */", "public", "constructor", "(", "private", "elementRef", ",", "private", "renderer", ",", "private", "ngZone", ",", "@", "Inject", "(", "PLATFORM_ID", ")", "private", "platformId", ")", "{", "}", "/**\n     * Angular's init view life cycle hook.\n     * Initializes the element for displaying the ellipsis.\n     */", "ngAfterViewInit", "(", ")", "{", "if", "(", "!", "isPlatformBrowser", "(", "this", ".", "platformId", ")", ")", "{", "return", ";", "}", "if", "(", "(", "<", "any", ">", "window", ")", ".", "ResizeObserver", "!=", "null", ")", "{", "ResizeObserver", "=", "(", "<", "any", ">", "window", ")", ".", "ResizeObserver", ";", "}", "if", "(", "this", ".", "ellipsisCharacters", "===", "''", ")", "{", "this", ".", "ellipsisCharacters", "=", "'...'", ";", "}", "this", ".", "moreAnchor", "=", "<", "HTMLAnchorElement", ">", "this", ".", "renderer", ".", "createElement", "(", "'a'", ")", ";", "this", ".", "moreAnchor", ".", "className", "=", "'ngx-ellipsis-more'", ";", "this", ".", "moreAnchor", ".", "href", "=", "'#'", ";", "this", ".", "moreAnchor", ".", "textContent", "=", "this", ".", "ellipsisCharacters", ";", "if", "(", "!", "this", ".", "ellipsisWordBoundaries", ")", "{", "this", ".", "ellipsisWordBoundaries", "=", "''", ";", "}", "this", ".", "ellipsisWordBoundaries", "=", "'['", "+", "this", ".", "ellipsisWordBoundaries", ".", "replace", "(", "/\\\\n/", ",", "'\\n'", ")", ".", "replace", "(", "/[-\\/\\\\^$*+?.()|[\\]{}]/g", ",", "'\\\\$&'", ")", "+", "']'", ";", "if", "(", "!", "this", ".", "ellipsisSubstrFn", ")", "{", "this", ".", "ellipsisSubstrFn", "=", "(", "str", ",", "from", ",", "length", "?", ")", "=>", "{", "return", "str", ".", "substr", "(", "from", ",", "length", ")", ";", "}", ";", "}", "this", ".", "elem", "=", "this", ".", "elementRef", ".", "nativeElement", ";", "if", "(", "typeof", "this", ".", "ellipsisContent", "!==", "'undefined'", "&&", "this", ".", "ellipsisContent", "!==", "null", ")", "{", "this", ".", "originalText", "=", "EllipsisDirective", ".", "convertEllipsisInputToString", "(", "this", ".", "ellipsisContent", ")", ";", "}", "else", "if", "(", "!", "this", ".", "originalText", ")", "{", "this", ".", "originalText", "=", "this", ".", "elem", ".", "textContent", ".", "trim", "(", ")", ";", "}", "this", ".", "renderer", ".", "setProperty", "(", "this", ".", "elem", ",", "'innerHTML'", ",", "''", ")", ";", "this", ".", "innerElem", "=", "this", ".", "renderer", ".", "createElement", "(", "'div'", ")", ";", "this", ".", "renderer", ".", "addClass", "(", "this", ".", "innerElem", ",", "'ngx-ellipsis-inner'", ")", ";", "const", "text", "=", "this", ".", "renderer", ".", "createText", "(", "this", ".", "originalText", ")", ";", "this", ".", "renderer", ".", "appendChild", "(", "this", ".", "innerElem", ",", "text", ")", ";", "this", ".", "renderer", ".", "appendChild", "(", "this", ".", "elem", ",", "this", ".", "innerElem", ")", ";", "this", ".", "previousDimensions", "=", "{", "width", ":", "this", ".", "elem", ".", "clientWidth", ",", "height", ":", "this", ".", "elem", ".", "clientHeight", "}", ";", "this", ".", "addResizeListener", "(", "true", ")", ";", "}", "/**\n     * Angular's change life cycle hook.\n     * Change original text (if the ellipsis-content has been passed)\n     * and re-render\n     */", "ngOnChanges", "(", "changes", ")", "{", "const", "moreAnchorRequiresChange", "=", "this", ".", "moreAnchor", "&&", "changes", "[", "'ellipsisCharacters'", "]", ";", "if", "(", "moreAnchorRequiresChange", ")", "{", "this", ".", "moreAnchor", ".", "textContent", "=", "this", ".", "ellipsisCharacters", ";", "}", "if", "(", "this", ".", "elem", "&&", "typeof", "this", ".", "ellipsisContent", "!==", "'undefined'", "&&", "(", "this", ".", "originalText", "!==", "EllipsisDirective", ".", "convertEllipsisInputToString", "(", "this", ".", "ellipsisContent", ")", "||", "moreAnchorRequiresChange", ")", ")", "{", "this", ".", "originalText", "=", "EllipsisDirective", ".", "convertEllipsisInputToString", "(", "this", ".", "ellipsisContent", ")", ";", "this", ".", "applyEllipsis", "(", ")", ";", "}", "}", "/**\n     * Angular's destroy life cycle hook.\n     * Remove event listeners\n     */", "ngOnDestroy", "(", ")", "{", "if", "(", "isPlatformBrowser", "(", "this", ".", "platformId", ")", ")", "{", "this", ".", "removeAllListeners", "(", ")", ";", "}", "}", "/**\n     * remove all resize listeners\n     */", "private", "removeAllListeners", "(", ")", "{", "if", "(", "this", ".", "destroyMoreClickListener", ")", "{", "this", ".", "destroyMoreClickListener", "(", ")", ";", "}", "this", ".", "removeResizeListeners$", ".", "next", "(", ")", ";", "this", ".", "removeResizeListeners$", ".", "complete", "(", ")", ";", "}", "param", "triggerNow", "private", "addResizeListener", "(", "triggerNow", "=", "false", ")", "{", "if", "(", "typeof", "(", "this", ".", "resizeDetectionStrategy", ")", "===", "'undefined'", ")", "{", "this", ".", "resizeDetectionStrategy", "=", "''", ";", "}", "switch", "(", "this", ".", "resizeDetectionStrategy", ")", "{", "case", "'manual'", ":", "break", ";", "case", "'window'", ":", "this", ".", "addWindowResizeListener", "(", ")", ";", "break", ";", "default", ":", "if", "(", "typeof", "(", "console", ")", "!==", "'undefined'", ")", "{", "console", ".", "warn", "(", "`No such ellipsis-resize-detection strategy: '${", "this", ".", "resizeDetectionStrategy", "}'. Using 'resize-observer' instead`", ")", ";", "}", "case", "'resize-observer'", ":", "case", "''", ":", "this", ".", "addElementResizeListener", "(", ")", ";", "break", ";", "}", "if", "(", "triggerNow", "&&", "this", ".", "resizeDetectionStrategy", "!==", "'manual'", ")", "{", "this", ".", "applyEllipsis", "(", ")", ";", "}", "}", "/**\n     * Set up an event listener to call applyEllipsis() whenever the window gets resized.\n     */", "private", "addWindowResizeListener", "(", ")", "{", "const", "removeWindowResizeListener", "=", "this", ".", "renderer", ".", "listen", "(", "'window'", ",", "'resize'", ",", "(", ")", "=>", "{", "this", ".", "ngZone", ".", "run", "(", "(", ")", "=>", "{", "this", ".", "applyEllipsis", "(", ")", ";", "}", ")", ";", "}", ")", ";", "this", ".", "removeResizeListeners$", ".", "pipe", "(", "take", "(", "1", ")", ")", ".", "subscribe", "(", "(", ")", "=>", "removeWindowResizeListener", "(", ")", ")", ";", "}", "/**\n     * Set up an event listener to call applyEllipsis() whenever the element\n     * has been resized.\n     */", "private", "addElementResizeListener", "(", ")", "{", "const", "resizeObserver", "=", "new", "ResizeObserver", "(", "(", ")", "=>", "{", "window", ".", "requestAnimationFrame", "(", "(", ")", "=>", "{", "if", "(", "this", ".", "previousDimensions", ".", "width", "!==", "this", ".", "elem", ".", "clientWidth", "||", "this", ".", "previousDimensions", ".", "height", "!==", "this", ".", "elem", ".", "clientHeight", ")", "{", "this", ".", "ngZone", ".", "run", "(", "(", ")", "=>", "{", "this", ".", "applyEllipsis", "(", ")", ";", "}", ")", ";", "this", ".", "previousDimensions", ".", "width", "=", "this", ".", "elem", ".", "clientWidth", ";", "this", ".", "previousDimensions", ".", "height", "=", "this", ".", "elem", ".", "clientHeight", ";", "}", "}", ")", ";", "}", ")", ";", "resizeObserver", ".", "observe", "(", "this", ".", "elem", ")", ";", "this", ".", "removeResizeListeners$", ".", "pipe", "(", "take", "(", "1", ")", ")", ".", "subscribe", "(", "(", ")", "=>", "resizeObserver", ".", "disconnect", "(", ")", ")", ";", "}", "param", "max", "return", "private", "getTruncatedText", "(", "max", ")", "{", "if", "(", "!", "this", ".", "originalText", "||", "this", ".", "originalText", ".", "length", "<=", "max", ")", "{", "return", "this", ".", "originalText", ";", "}", "const", "truncatedText", "=", "this", ".", "ellipsisSubstrFn", "(", "this", ".", "originalText", ",", "0", ",", "max", ")", ";", "if", "(", "this", ".", "ellipsisWordBoundaries", "===", "'[]'", "||", "this", ".", "originalText", ".", "charAt", "(", "max", ")", ".", "match", "(", "this", ".", "ellipsisWordBoundaries", ")", ")", "{", "return", "truncatedText", ";", "}", "let", "i", "=", "max", "-", "1", ";", "while", "(", "i", ">", "0", "&&", "!", "truncatedText", ".", "charAt", "(", "i", ")", ".", "match", "(", "this", ".", "ellipsisWordBoundaries", ")", ")", "{", "i", "--", ";", "}", "return", "this", ".", "ellipsisSubstrFn", "(", "truncatedText", ",", "0", ",", "i", ")", ";", "}", "param", "max", "param", "addMoreListener", "returns", "private", "truncateText", "(", "max", ",", "addMoreListener", "=", "false", ")", "{", "let", "text", "=", "this", ".", "getTruncatedText", "(", "max", ")", ";", "const", "truncatedLength", "=", "text", ".", "length", ";", "const", "textTruncated", "=", "(", "truncatedLength", "!==", "this", ".", "originalText", ".", "length", ")", ";", "if", "(", "textTruncated", "&&", "!", "this", ".", "showMoreLink", ")", "{", "text", "+=", "this", ".", "ellipsisCharacters", ";", "}", "this", ".", "renderer", ".", "setProperty", "(", "this", ".", "innerElem", ",", "'textContent'", ",", "text", ")", ";", "if", "(", "textTruncated", "&&", "this", ".", "showMoreLink", ")", "{", "this", ".", "renderer", ".", "appendChild", "(", "this", ".", "innerElem", ",", "this", ".", "moreAnchor", ")", ";", "}", "if", "(", "this", ".", "destroyMoreClickListener", ")", "{", "this", ".", "destroyMoreClickListener", "(", ")", ";", "this", ".", "destroyMoreClickListener", "=", "null", ";", "}", "if", "(", "addMoreListener", "&&", "textTruncated", ")", "{", "this", ".", "destroyMoreClickListener", "=", "this", ".", "renderer", ".", "listen", "(", "this", ".", "moreAnchor", ",", "'click'", ",", "(", "e", ")", "=>", "{", "if", "(", "!", "e", ".", "target", "||", "!", "(", "<", "HTMLElement", ">", "e", ".", "target", ")", ".", "classList", ".", "contains", "(", "'ngx-ellipsis-more'", ")", ")", "{", "return", ";", "}", "e", ".", "preventDefault", "(", ")", ";", "this", ".", "moreClickEmitter", ".", "emit", "(", "e", ")", ";", "}", ")", ";", "}", "return", "truncatedLength", ";", "}", "/**\n     * Display ellipsis in the inner div if the text would exceed the boundaries\n     */", "public", "applyEllipsis", "(", ")", "{", "this", ".", "removeResizeListeners$", ".", "next", "(", ")", ";", "const", "maxLength", "=", "EllipsisDirective", ".", "numericBinarySearch", "(", "this", ".", "originalText", ".", "length", ",", "curLength", "=>", "{", "this", ".", "truncateText", "(", "curLength", ")", ";", "return", "!", "this", ".", "isOverflowing", ";", "}", ")", ";", "const", "finalLength", "=", "this", ".", "truncateText", "(", "maxLength", ",", "this", ".", "showMoreLink", ")", ";", "this", ".", "addResizeListener", "(", ")", ";", "if", "(", "this", ".", "changeEmitter", ".", "observers", ".", "length", ">", "0", ")", "{", "this", ".", "changeEmitter", ".", "emit", "(", "(", "this", ".", "originalText", ".", "length", "===", "finalLength", ")", "?", "null", ":", "finalLength", ")", ";", "}", "}", "/**\n     * Whether the text is exceeding the element's boundaries or not\n     */", "private", "get", "isOverflowing", "(", ")", ":", "boolean", "{", "const", "currentOverflow", "=", "this", ".", "elem", ".", "style", ".", "overflow", ";", "if", "(", "!", "currentOverflow", "||", "currentOverflow", "===", "'visible'", ")", "{", "this", ".", "elem", ".", "style", ".", "overflow", "=", "'hidden'", ";", "}", "const", "isOverflowing", "=", "this", ".", "elem", ".", "clientWidth", "<", "this", ".", "elem", ".", "scrollWidth", "-", "1", "||", "this", ".", "elem", ".", "clientHeight", "<", "this", ".", "elem", ".", "scrollHeight", "-", "1", ";", "this", ".", "elem", ".", "style", ".", "overflow", "=", "currentOverflow", ";", "return", "isOverflowing", ";", "}", "/**\n     * Whether the `ellipsisCharacters` are to be wrapped inside an anchor tag (if they are shown at all)\n     */", "private", "get", "showMoreLink", "(", ")", ":", "boolean", "{", "return", "(", "this", ".", "moreClickEmitter", ".", "observers", ".", "length", ">", "0", ")", ";", "}", "}"], "labels": [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "number", null, "number", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "number", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "string", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "ElementRef", null, null, "Renderer2", null, null, "NgZone", null, null, null, null, null, null, null, "Object", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "string", null, "number", null, "number", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "SimpleChanges", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "string", null, "number", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "number", null, "number", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "MouseEvent", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], "url": "https://github.com/lentschi/ngx-ellipsis", "path": "ngx-ellipsis/projects/ngx-ellipsis/src/lib/directives/ellipsis.directive.ts", "commit_hash": "566dbaf58f999a76dbaef7a854b714b9d63cdc56", "file": "ellipsis.directive.ts"}
{"tokens": ["import", "{", "TestBed", ",", "async", "}", "from", "'@angular/core/testing'", ";", "import", "{", "Component", "}", "from", "'@angular/core'", ";", "import", "{", "EllipsisDirective", "}", "from", "'./ellipsis.directive'", ";", "import", "{", "ComponentFixtureAutoDetect", "}", "from", "'@angular/core/testing'", ";", "jasmine", ".", "DEFAULT_TIMEOUT_INTERVAL", "=", "10000", ";", "const", "ELLIPSIS_TEST_CSS", "=", "`\n  * {\n    font-family: 'Times New Roman', Times, serif;\n    font-size: 16px;\n    letter-spacing: 0.01px;\n    word-spacing: 0.01px;\n  }\n`", ";", "@", "Component", "(", "{", "selector", ":", "'ellipsis-test-cmp'", ",", "template", ":", "`\n    <div style=\"width: 100px; height:50px;\" id=\"ellipsisTest\" ellipsis>\n      Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt\n    </div>\n  `", ",", "styles", ":", "[", "ELLIPSIS_TEST_CSS", "]", "}", ")", "class", "StaticTestComponent", "{", "}", "@", "Component", "(", "{", "selector", ":", "'ellipsis-test-cmp'", ",", "template", ":", "`\n    <div\n        id=\"ellipsisTestDynamic\"\n        [ellipsis]=\"ellipsisMoreText\"\n        [ngStyle]=\"styles\"\n        [ellipsis-word-boundaries]=\"wordBoundaries\"\n        [ellipsis-content]=\"htmlContent\"\n        (ellipsis-change)=\"onEllipsisChange($event)\"\n        (ellipsis-click-more)=\"onEllipsisClickMore($event)\"></div>\n  `", ",", "styles", ":", "[", "ELLIPSIS_TEST_CSS", "]", "}", ")", "class", "DynamicTestComponent", "{", "htmlContent", "=", "'<b>Lorem ipsum</b> dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt'", ";", "wordBoundaries", "=", "' \\n'", ";", "styles", "=", "{", "width", ":", "'100px'", ",", "height", ":", "'100px'", "}", ";", "ellipsisMoreText", "=", "'...'", ";", "onEllipsisChange", "(", "_truncatedAt", ")", "{", "}", "onEllipsisClickMore", "(", "_event", ")", "{", "}", "}", "@", "Component", "(", "{", "selector", ":", "'ellipsis-number-test-cmp'", ",", "template", ":", "`\n    <div\n        style=\"width: 100px; height:100px;\"\n        id=\"ellipsisNumberTestDynamic\"\n        ellipsis\n        [ellipsis-content]=\"htmlContent\"></div>\n  `", ",", "styles", ":", "[", "ELLIPSIS_TEST_CSS", "]", "}", ")", "class", "NumberTestComponent", "{", "htmlContent", "=", "0", ";", "}", "describe", "(", "'EllipsisDirective'", ",", "(", ")", "=>", "{", "beforeEach", "(", "async", "(", "(", ")", "=>", "{", "TestBed", ".", "configureTestingModule", "(", "{", "declarations", ":", "[", "DynamicTestComponent", ",", "NumberTestComponent", ",", "StaticTestComponent", ",", "EllipsisDirective", "]", ",", "providers", ":", "[", "{", "provide", ":", "ComponentFixtureAutoDetect", ",", "useValue", ":", "true", "}", "]", "}", ")", ";", "}", ")", ")", ";", "it", "(", "'should create a ellipsis'", ",", "async", "(", "async", "(", ")", "=>", "{", "const", "fixture", "=", "TestBed", ".", "createComponent", "(", "StaticTestComponent", ")", ";", "fixture", ".", "detectChanges", "(", ")", ";", "await", "fixture", ".", "whenStable", "(", ")", ";", "const", "compiled", "=", "fixture", ".", "debugElement", ".", "nativeElement", ";", "const", "ellipsisDiv", "=", "compiled", ".", "querySelector", "(", "'#ellipsisTest > div'", ")", ";", "expect", "(", "ellipsisDiv", ".", "innerHTML", ")", ".", "toBe", "(", "'Lorem ipsum dolor sit ame...'", ")", ";", "}", ")", ")", ";", "it", "(", "'should emit details about the ellipsis'", ",", "async", "(", "async", "(", ")", "=>", "{", "const", "fixture", "=", "TestBed", ".", "createComponent", "(", "DynamicTestComponent", ")", ";", "const", "componentInstance", "=", "fixture", ".", "componentInstance", ";", "const", "changeSpy", "=", "spyOn", "(", "componentInstance", ",", "'onEllipsisChange'", ")", ";", "fixture", ".", "detectChanges", "(", ")", ";", "await", "fixture", ".", "whenStable", "(", ")", ";", "componentInstance", ".", "htmlContent", "=", "'Test'", ";", "fixture", ".", "detectChanges", "(", ")", ";", "await", "fixture", ".", "whenStable", "(", ")", ";", "expect", "(", "changeSpy", ".", "calls", ".", "count", "(", ")", ")", ".", "toBe", "(", "1", ")", ";", "expect", "(", "changeSpy", ".", "calls", ".", "mostRecent", "(", ")", ".", "args", ".", "length", ")", ".", "toBe", "(", "1", ")", ";", "expect", "(", "changeSpy", ".", "calls", ".", "mostRecent", "(", ")", ".", "args", "[", "0", "]", ")", ".", "toEqual", "(", "null", ")", ";", "const", "newTestText", "=", "'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt'", ";", "componentInstance", ".", "htmlContent", "=", "newTestText", ";", "fixture", ".", "detectChanges", "(", ")", ";", "await", "fixture", ".", "whenStable", "(", ")", ";", "expect", "(", "changeSpy", ".", "calls", ".", "count", "(", ")", ")", ".", "toBe", "(", "2", ")", ";", "expect", "(", "changeSpy", ".", "calls", ".", "mostRecent", "(", ")", ".", "args", ".", "length", ")", ".", "toBe", "(", "1", ")", ";", "expect", "(", "changeSpy", ".", "calls", ".", "mostRecent", "(", ")", ".", "args", "[", "0", "]", ")", ".", "toEqual", "(", "60", ")", ";", "}", ")", ")", ";", "it", "(", "'should display click more'", ",", "async", "(", "async", "(", ")", "=>", "{", "const", "fixture", "=", "TestBed", ".", "createComponent", "(", "DynamicTestComponent", ")", ";", "const", "componentInstance", "=", "fixture", ".", "componentInstance", ";", "const", "clickMoreSpy", "=", "spyOn", "(", "componentInstance", ",", "'onEllipsisClickMore'", ")", ";", "componentInstance", ".", "htmlContent", "=", "'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt'", ";", "fixture", ".", "detectChanges", "(", ")", ";", "await", "fixture", ".", "whenStable", "(", ")", ";", "const", "compiled", "=", "fixture", ".", "debugElement", ".", "nativeElement", ";", "let", "moreSpan", "=", "<", "HTMLSpanElement", ">", "compiled", ".", "querySelector", "(", "'#ellipsisTestDynamic .ngx-ellipsis-more'", ")", ";", "expect", "(", "moreSpan", ".", "innerText", ")", ".", "toBe", "(", "'...'", ")", ";", "moreSpan", ".", "click", "(", ")", ";", "expect", "(", "clickMoreSpy", ".", "calls", ".", "count", "(", ")", ")", ".", "toBe", "(", "1", ")", ";", "}", ")", ")", ";", "it", "(", "'should adapt more link text on input change'", ",", "async", "(", "async", "(", ")", "=>", "{", "const", "fixture", "=", "TestBed", ".", "createComponent", "(", "DynamicTestComponent", ")", ";", "const", "componentInstance", "=", "fixture", ".", "componentInstance", ";", "componentInstance", ".", "htmlContent", "=", "'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt'", ";", "fixture", ".", "detectChanges", "(", ")", ";", "await", "fixture", ".", "whenStable", "(", ")", ";", "const", "compiled", "=", "fixture", ".", "debugElement", ".", "nativeElement", ";", "let", "moreSpan", "=", "<", "HTMLSpanElement", ">", "compiled", ".", "querySelector", "(", "'#ellipsisTestDynamic .ngx-ellipsis-more'", ")", ";", "expect", "(", "moreSpan", ".", "innerText", ")", ".", "toBe", "(", "'...'", ")", ";", "componentInstance", ".", "ellipsisMoreText", "=", "' (more)'", ";", "fixture", ".", "detectChanges", "(", ")", ";", "await", "fixture", ".", "whenStable", "(", ")", ";", "moreSpan", "=", "<", "HTMLSpanElement", ">", "compiled", ".", "querySelector", "(", "'#ellipsisTestDynamic .ngx-ellipsis-more'", ")", ";", "expect", "(", "moreSpan", ".", "innerText", ")", ".", "toBe", "(", "' (more)'", ")", ";", "}", ")", ")", ";", "it", "(", "'should create a ellipsis escaping html content'", ",", "async", "(", "async", "(", ")", "=>", "{", "const", "fixture", "=", "TestBed", ".", "createComponent", "(", "DynamicTestComponent", ")", ";", "const", "componentInstance", "=", "fixture", ".", "componentInstance", ";", "fixture", ".", "detectChanges", "(", ")", ";", "await", "fixture", ".", "whenStable", "(", ")", ";", "const", "compiled", "=", "fixture", ".", "debugElement", ".", "nativeElement", ";", "const", "ellipsisDiv", "=", "compiled", ".", "querySelector", "(", "'#ellipsisTestDynamic > div'", ")", ";", "expect", "(", "ellipsisDiv", ".", "innerText", ")", ".", "toBe", "(", "'<b>Lorem ipsum</b> dolor sit amet, consetetur sadipscing...'", ")", ";", "componentInstance", ".", "htmlContent", "=", "'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt'", ";", "fixture", ".", "detectChanges", "(", ")", ";", "await", "fixture", ".", "whenStable", "(", ")", ";", "expect", "(", "ellipsisDiv", ".", "innerText", ")", ".", "toBe", "(", "'Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed...'", ")", ";", "componentInstance", ".", "htmlContent", "=", "`Lorem ipsum dolor <b>sit amet</b>,\n      consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt`", ";", "fixture", ".", "detectChanges", "(", ")", ";", "await", "fixture", ".", "whenStable", "(", ")", ";", "expect", "(", "ellipsisDiv", ".", "innerText", ")", ".", "toBe", "(", "'Lorem ipsum dolor <b>sit amet</b>, consetetur sadipscing...'", ")", ";", "componentInstance", ".", "htmlContent", "=", "'C\\'est l\\'homme&nbsp;qui a vu <b>l\\'homme</b> qui a vu l\\'ours.'", ";", "componentInstance", ".", "wordBoundaries", "=", "''", ";", "componentInstance", ".", "styles", ".", "width", "=", "'390px'", ";", "componentInstance", ".", "styles", ".", "height", "=", "'30px'", ";", "fixture", ".", "detectChanges", "(", ")", ";", "await", "fixture", ".", "whenStable", "(", ")", ";", "expect", "(", "ellipsisDiv", ".", "innerText", ")", ".", "toBe", "(", "'C\\'est l\\'homme&nbsp;qui a vu <b>l\\'homme</b> qui a vu l\\'...'", ")", ";", "}", ")", ")", ";", "it", "(", "'should handle null graciously'", ",", "async", "(", "async", "(", ")", "=>", "{", "const", "fixture", "=", "TestBed", ".", "createComponent", "(", "DynamicTestComponent", ")", ";", "const", "componentInstance", "=", "fixture", ".", "componentInstance", ";", "fixture", ".", "detectChanges", "(", ")", ";", "await", "fixture", ".", "whenStable", "(", ")", ";", "const", "compiled", "=", "fixture", ".", "debugElement", ".", "nativeElement", ";", "const", "ellipsisDiv", "=", "compiled", ".", "querySelector", "(", "'#ellipsisTestDynamic > div'", ")", ";", "expect", "(", "ellipsisDiv", ".", "innerText", ")", ".", "toBe", "(", "'<b>Lorem ipsum</b> dolor sit amet, consetetur sadipscing...'", ")", ";", "componentInstance", ".", "htmlContent", "=", "null", ";", "fixture", ".", "detectChanges", "(", ")", ";", "await", "fixture", ".", "whenStable", "(", ")", ";", "expect", "(", "ellipsisDiv", ".", "innerText", ")", ".", "toBe", "(", "''", ")", ";", "}", ")", ")", ";", "it", "(", "'should handle numbers graciously'", ",", "async", "(", "async", "(", ")", "=>", "{", "const", "numberFixture", "=", "TestBed", ".", "createComponent", "(", "NumberTestComponent", ")", ";", "const", "numberComponentInstance", "=", "numberFixture", ".", "componentInstance", ";", "numberFixture", ".", "detectChanges", "(", ")", ";", "await", "numberFixture", ".", "whenStable", "(", ")", ";", "const", "compiled", "=", "numberFixture", ".", "debugElement", ".", "nativeElement", ";", "const", "ellipsisDiv", "=", "compiled", ".", "querySelector", "(", "'#ellipsisNumberTestDynamic > div'", ")", ";", "numberFixture", ".", "detectChanges", "(", ")", ";", "await", "numberFixture", ".", "whenStable", "(", ")", ";", "expect", "(", "ellipsisDiv", ".", "innerText", ")", ".", "toBe", "(", "'0'", ")", ";", "numberComponentInstance", ".", "htmlContent", "=", "Math", ".", "PI", ";", "numberFixture", ".", "detectChanges", "(", ")", ";", "await", "numberFixture", ".", "whenStable", "(", ")", ";", "expect", "(", "ellipsisDiv", ".", "innerText", ")", ".", "toBe", "(", "'3.141592653...'", ")", ";", "}", ")", ")", ";", "}", ")", ";"], "labels": [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "number", null, null, null, null, null, "MouseEvent", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], "url": "https://github.com/lentschi/ngx-ellipsis", "path": "ngx-ellipsis/projects/ngx-ellipsis/src/lib/directives/ellipsis.directive.spec.ts", "commit_hash": "566dbaf58f999a76dbaef7a854b714b9d63cdc56", "file": "ellipsis.directive.spec.ts"}
{"tokens": ["import", "{", "BuidlerConfig", ",", "usePlugin", ",", "internalTask", "}", "from", "\"@nomiclabs/buidler/config\"", ";", "import", "{", "TASK_COMPILE_RUN_COMPILER", "}", "from", "\"@nomiclabs/buidler/builtin-tasks/task-names\"", ";", "import", "{", "execSync", "}", "from", "\"child_process\"", ";", "usePlugin", "(", "\"@nomiclabs/buidler-truffle5\"", ")", ";", "usePlugin", "(", "\"@nomiclabs/buidler-web3\"", ")", ";", "const", "moduleAlias", "=", "require", "(", "'module-alias'", ")", ";", "moduleAlias", ".", "addAlias", "(", "'@utils'", ",", "__dirname", "+", "'/utils'", ")", ";", "moduleAlias", ".", "addAlias", "(", "'@deployments'", ",", "__dirname", "+", "'/deployments'", ")", ";", "internalTask", "(", "TASK_COMPILE_RUN_COMPILER", ")", ".", "setAction", "(", "async", "(", "{", "input", "}", ",", "{", "config", "}", ",", "runSuper", ")", "=>", "{", "let", "solcVersionOutput", "=", "\"\"", ";", "try", "{", "solcVersionOutput", "=", "execSync", "(", "`solc --version`", ")", ".", "toString", "(", ")", ";", "}", "catch", "(", "error", ")", "{", "}", "console", ".", "log", "(", "\"Output\"", ",", "solcVersionOutput", ")", ";", "if", "(", "!", "solcVersionOutput", ".", "includes", "(", "config", ".", "solc", ".", "version", ")", ")", "{", "console", ".", "log", "(", "`Using solcjs`", ")", ";", "return", "runSuper", "(", ")", ";", "}", "console", ".", "log", "(", "`Using native solc`", ")", ";", "const", "output", "=", "execSync", "(", "`solc --standard-json`", ",", "{", "input", ":", "JSON", ".", "stringify", "(", "input", ",", "undefined", ",", "2", ")", ",", "}", ")", ";", "return", "JSON", ".", "parse", "(", "output", ".", "toString", "(", "`utf8`", ")", ")", ";", "}", ")", ";", "const", "config", "=", "{", "solc", ":", "{", "version", ":", "\"0.5.7\"", ",", "optimizer", ":", "{", "enabled", ":", "true", ",", "runs", ":", "200", ",", "}", ",", "evmVersion", ":", "\"byzantium\"", ",", "}", ",", "paths", ":", "{", "artifacts", ":", "\"./build/contracts\"", ",", "tests", ":", "\"./transpiled/test/contracts\"", ",", "}", ",", "networks", ":", "{", "buidlerevm", ":", "{", "blockGasLimit", ":", "20000000", ",", "}", ",", "}", ",", "}", ";", "export", "default", "config", ";"], "labels": [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "UNK", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], "url": "https://github.com/SetProtocol/set-protocol-strategies", "path": "set-protocol-strategies/buidler.config.ts", "commit_hash": "0dd35abd235b85e09802ba5b0d9717d3c085bc86", "file": "buidler.config.ts"}
{"tokens": ["import", "*", "as", "_", "from", "\"lodash\"", ";", "import", "Web3", "from", "\"web3\"", ";", "import", "{", "BigNumber", "}", "from", "\"bignumber.js\"", ";", "import", "Contract", "from", "\"web3/eth/contract\"", ";", "import", "{", "ABIDefinition", "}", "from", "\"web3/eth/abi\"", ";", "import", "{", "Tx", "}", "from", "\"web3/eth/types\"", ";", "export", "const", "CONTRACT_WRAPPER_ERRORS", "=", "{", "CONTRACT_NOT_FOUND_ON_NETWORK", ":", "(", "contractName", ",", "networkId", ")", "=>", "`Unable to find address for contract ${", "contractName", "} on network with id ${", "networkId", "}`", ",", "}", ";", "export", "class", "BaseContract", "{", "public", "address", ":", "string", ";", "public", "abi", ":", "ABIDefinition", "[", "]", ";", "public", "web3ContractInstance", ":", "Contract", ";", "protected", "defaults", ":", "Tx", ";", "constructor", "(", "web3ContractInstance", ",", "defaults", ")", "{", "this", ".", "web3ContractInstance", "=", "web3ContractInstance", ";", "this", ".", "address", "=", "web3ContractInstance", ".", "options", ".", "address", ";", "this", ".", "abi", "=", "web3ContractInstance", ".", "options", ".", "jsonInterface", ";", "this", ".", "defaults", "=", "defaults", ";", "}", "protected", "formatABIDataItem", "(", "type", ",", "components", ",", "value", ")", "{", "const", "trailingArrayRegex", "=", "/\\[\\d*\\]$/", ";", "if", "(", "type", ".", "match", "(", "trailingArrayRegex", ")", ")", "{", "const", "arrayItemType", "=", "type", ".", "replace", "(", "trailingArrayRegex", ",", "''", ")", ";", "return", "_", ".", "map", "(", "value", ",", "val", "=>", "(", "this", ".", "formatABIDataItem", "(", "arrayItemType", ",", "components", ",", "val", ")", ")", ")", ";", "}", "else", "if", "(", "type", "===", "'tuple'", ")", "{", "const", "formattedTuple", "=", "{", "}", ";", "_", ".", "forEach", "(", "components", ",", "componentABI", "=>", "{", "formattedTuple", "[", "componentABI", ".", "name", "]", "=", "this", ".", "formatABIDataItem", "(", "componentABI", ".", "type", ",", "componentABI", ".", "components", ",", "value", "[", "componentABI", ".", "name", "]", ")", ";", "}", ")", ";", "return", "formattedTuple", ";", "}", "else", "{", "return", "type", ".", "match", "(", "/^u?int\\d*$/", ")", "?", "value", ".", "toString", "(", ")", ":", "value", ";", "}", "}", "protected", "async", "applyDefaultsToTxDataAsync", "<", "T", "extends", "Tx", ">", "(", "txData", ",", "estimateGasAsync", "?", ")", "{", "const", "removeUndefinedProperties", "=", "_", ".", "pickBy", ";", "const", "txDataWithDefaults", "=", "{", "...", "removeUndefinedProperties", "(", "this", ".", "defaults", ")", ",", "...", "removeUndefinedProperties", "(", "txData", "as", "any", ")", ",", "}", ";", "if", "(", "_", ".", "isUndefined", "(", "txDataWithDefaults", ".", "gas", ")", "&&", "!", "_", ".", "isUndefined", "(", "estimateGasAsync", ")", ")", "{", "const", "estimatedGas", "=", "await", "estimateGasAsync", "(", "txData", ")", ";", "txDataWithDefaults", ".", "gas", "=", "new", "BigNumber", "(", "estimatedGas", ")", ".", "toNumber", "(", ")", ";", "}", "return", "txDataWithDefaults", ";", "}", "}"], "labels": [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "string", null, "number", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "Contract", null, "Tx", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "string", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "object", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "Promise", null, null, null, null, null, null, "T", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], "url": "https://github.com/SetProtocol/set-protocol-strategies", "path": "set-protocol-strategies/types/base_contract.ts", "commit_hash": "0dd35abd235b85e09802ba5b0d9717d3c085bc86", "file": "base_contract.ts"}
{"tokens": ["import", "{", "BigNumber", "}", "from", "\"bignumber.js\"", ";", "import", "{", "UInt", "}", "from", "'set-protocol-utils'", ";", "import", "*", "as", "_", "from", "\"lodash\"", ";", "export", "const", "classUtils", "=", "{", "bindAll", "(", "self", ",", "exclude", "=", "[", "\"contructor\"", "]", ",", "thisArg", "?", ")", "{", "for", "(", "const", "key", "of", "Object", ".", "getOwnPropertyNames", "(", "self", ")", ")", "{", "const", "val", "=", "self", "[", "key", "]", ";", "if", "(", "!", "_", ".", "includes", "(", "exclude", ",", "key", ")", ")", "{", "if", "(", "_", ".", "isFunction", "(", "val", ")", ")", "{", "self", "[", "key", "]", "=", "val", ".", "bind", "(", "thisArg", "||", "self", ")", ";", "}", "else", "if", "(", "_", ".", "isObject", "(", "val", ")", ")", "{", "classUtils", ".", "bindAll", "(", "val", ",", "exclude", ",", "self", ")", ";", "}", "}", "}", "return", "self", ";", "}", ",", "}", ";", "export", "enum", "SolidityTypes", "{", "Address", "=", "'address'", ",", "Uint256", "=", "'uint256'", ",", "Uint8", "=", "'uint8'", ",", "Uint", "=", "'uint'", ",", "AddressArray", "=", "'address[]'", ",", "UintArray", "=", "'uint256[]'", "}"], "labels": [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "void", null, null, null, "array", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], "url": "https://github.com/SetProtocol/set-protocol-strategies", "path": "set-protocol-strategies/types/common.ts", "commit_hash": "0dd35abd235b85e09802ba5b0d9717d3c085bc86", "file": "common.ts"}
{"tokens": ["import", "{", "BigNumber", "}", "from", "'bignumber.js'", ";", "import", "{", "BigNumberSetup", "}", "from", "'./bigNumberSetup'", ";", "BigNumberSetup", ".", "configure", "(", ")", ";", "import", "Web3", "from", "'web3'", ";", "const", "web3", "=", "new", "Web3", "(", ")", ";", "export", "function", "ether", "(", "amount", ")", "{", "const", "weiString", "=", "web3", ".", "utils", ".", "toWei", "(", "amount", ".", "toString", "(", ")", ",", "'ether'", ")", ";", "return", "new", "BigNumber", "(", "weiString", ")", ";", "}", "export", "function", "gWei", "(", "amount", ")", "{", "const", "weiString", "=", "web3", ".", "utils", ".", "toWei", "(", "amount", ".", "toString", "(", ")", ",", "'gwei'", ")", ";", "return", "new", "BigNumber", "(", "weiString", ")", ";", "}"], "labels": [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "BigNumber", null, "number", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "BigNumber", null, "number", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], "url": "https://github.com/SetProtocol/set-protocol-strategies", "path": "set-protocol-strategies/utils/units.ts", "commit_hash": "0dd35abd235b85e09802ba5b0d9717d3c085bc86", "file": "units.ts"}
{"tokens": ["import", "{", "BigNumber", "}", "from", "'bignumber.js'", ";", "import", "{", "ether", "}", "from", "'../utils/units'", ";", "export", "const", "AUCTION_TIME_INCREMENT", "=", "new", "BigNumber", "(", "30", ")", ";", "export", "const", "DEFAULT_AUCTION_PRICE_NUMERATOR", "=", "new", "BigNumber", "(", "1374", ")", ";", "export", "const", "DEFAULT_AUCTION_PRICE_DIVISOR", "=", "new", "BigNumber", "(", "1000", ")", ";", "export", "const", "DEFAULT_GAS", "=", "19000000", ";", "export", "const", "DEFAULT_MOCK_TOKEN_DECIMALS", "=", "18", ";", "export", "const", "DEFAULT_REBALANCING_NATURAL_UNIT", "=", "new", "BigNumber", "(", "10", "**", "6", ")", ";", "export", "const", "DEFAULT_REBALANCING_MINIMUM_NATURAL_UNIT", "=", "new", "BigNumber", "(", "10", "**", "4", ")", ";", "export", "const", "DEFAULT_REBALANCING_MAXIMUM_NATURAL_UNIT", "=", "new", "BigNumber", "(", "10", "**", "12", ")", ";", "export", "const", "DEFAULT_UNIT_SHARES", "=", "new", "BigNumber", "(", "10", "**", "6", ")", ";", "export", "const", "DEPLOYED_TOKEN_QUANTITY", "=", "ether", "(", "100000000000", ")", ";", "export", "const", "ETH_DECIMALS", "=", "new", "BigNumber", "(", "10", "**", "18", ")", ";", "export", "const", "KYBER_RESERVE_CONFIGURED_RATE", "=", "new", "BigNumber", "(", "'321556325999999997'", ")", ";", "export", "const", "NON_ZERO_BYTES", "=", "'0x0000000000000000000000000000000000000000000000000000000000000005'", ";", "export", "const", "NULL_ADDRESS", "=", "'0x0000000000000000000000000000000000000000'", ";", "export", "const", "ONE", "=", "new", "BigNumber", "(", "1", ")", ";", "export", "const", "ONE_HOUR_IN_SECONDS", "=", "new", "BigNumber", "(", "3600", ")", ";", "export", "const", "ONE_DAY_IN_SECONDS", "=", "new", "BigNumber", "(", "86400", ")", ";", "export", "const", "RISK_COLLATERAL_NATURAL_UNIT", "=", "new", "BigNumber", "(", "10", "**", "6", ")", ";", "export", "const", "SNAPSHOT_TIME_LOCK", "=", "new", "BigNumber", "(", "1", ")", ";", "export", "const", "SOCIAL_TRADING_NATURAL_UNIT", "=", "new", "BigNumber", "(", "10", "**", "8", ")", ";", "export", "const", "STABLE_COLLATERAL_NATURAL_UNIT", "=", "new", "BigNumber", "(", "10", "**", "12", ")", ";", "export", "const", "STANDARD_COMPONENT_UNIT", "=", "ether", "(", "1", ")", ";", "export", "const", "STANDARD_NATURAL_UNIT", "=", "ether", "(", "1", ")", ";", "export", "const", "STANDARD_QUANTITY_ISSUED", "=", "ether", "(", "10", ")", ";", "export", "const", "UNLIMITED_ALLOWANCE_IN_BASE_UNITS", "=", "new", "BigNumber", "(", "2", ")", ".", "pow", "(", "256", ")", ".", "minus", "(", "1", ")", ";", "export", "const", "USDC_DECIMALS", "=", "new", "BigNumber", "(", "10", "**", "6", ")", ";", "export", "const", "VALUE_TO_CENTS_CONVERSION", "=", "new", "BigNumber", "(", "10", "**", "16", ")", ";", "export", "const", "WBTC_DECIMALS", "=", "8", ";", "export", "const", "ZERO", "=", "new", "BigNumber", "(", "0", ")", ";", "export", "const", "ZERO_BYTES", "=", "'0x0000000000000000000000000000000000000000000000000000000000000000'", ";", "export", "const", "PRIVATE_KEYS", "=", "[", "'767df558efc63b6ba9a9257e68509c38f5c48d5938a41ab191a9a073ebff7c4f'", ",", "'6dc5d3331608e4b99b68dd8b9dee89973ebc6feee1cb0ba9a2ec814a99c680c1'", ",", "'2b73a8e22d40615e0144bee14c5f80668c449029d9f60eba71b800f0979337af'", ",", "'95fab20a86f7aa81c47854e3a0d265014359d557027c3e07c64dbac9f66b0930'", ",", "'b8400424887469943ca6e4448596a709c64ad768600e9c24538fda6c8f5d1599'", ",", "'737392faafc4b9fa8861ec0dfb1e3a01e383e270331faa25f28fb40866740046'", ",", "'92c0c7a1aba1e59f1f97af9a482649a4196b2b766f794b85bebcefeac8b80e30'", ",", "'05973025898f0c1c1c723545630ecd251c42297d8db665aec245526022d82a98'", ",", "'84f5e4921ea1ee2e53e2713bd5170877635c168d0fdab8044f15b835020f1f6c'", ",", "'b17ee27cba4f656d8cd13165ba9fdfa79abf5308253c75654030d360f1e65329'", ",", "'55d6cb34052149b6a93624bbfd1a277a37e352f34e16bc405054adf42b6eab18'", ",", "'cc87c4b4d1665092048511f0318755884771d498f79d29aa78b341a3f058f4c6'", ",", "'8884500103a7809924cbb5b6e7c1f8b9e27e7b6da839935f221406e02a954293'", ",", "'0a44845c2b09e9f942578f7dd960653595c152e558dbf7fb40bd85e918dd565f'", ",", "'843445407853ed9455b0b3511b50dc11a5c329746abbed08c95582b895c450a9'", ",", "]", ";"], "labels": [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "BigNumber", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "BigNumber", null, null, null, null, null, null, null, null, null, "string", null, null, null, null, null, "string", null, null, null, null, null, "BigNumber", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "BigNumber", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "BigNumber", null, null, null, null, null, null, null, null, null, "string", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], "url": "https://github.com/SetProtocol/set-protocol-strategies", "path": "set-protocol-strategies/utils/constants.ts", "commit_hash": "0dd35abd235b85e09802ba5b0d9717d3c085bc86", "file": "constants.ts"}
{"tokens": ["import", "*", "as", "chai", "from", "'chai'", ";", "import", "{", "BigNumber", "}", "from", "'bignumber.js'", ";", "import", "ChaiSetup", "from", "'./chaiSetup'", ";", "ChaiSetup", ".", "configure", "(", ")", ";", "const", "{", "expect", "}", "=", "chai", ";", "export", "async", "function", "expectRevertError", "(", "asyncTxn", ")", "{", "try", "{", "await", "asyncTxn", ";", "throw", "new", "Error", "(", "'Did not throw'", ")", ";", "}", "catch", "(", "e", ")", "{", "assertCertainError", "(", "e", ",", "'revert'", ")", ";", "}", "}", "export", "async", "function", "expectNoRevertError", "(", "asyncTxn", ")", "{", "try", "{", "await", "asyncTxn", ";", "expect", "(", "true", ")", ".", "to", ".", "be", ".", "true", ";", "}", "catch", "(", "e", ")", "{", "throw", "new", "Error", "(", "'Error thrown'", ")", ";", "}", "}", "export", "async", "function", "expectInvalidOpcodeError", "(", "asyncTxn", ")", "{", "try", "{", "await", "asyncTxn", ";", "throw", "new", "Error", "(", "'Did not throw'", ")", ";", "}", "catch", "(", "e", ")", "{", "assertCertainError", "(", "e", ",", "'invalid opcode'", ")", ";", "}", "}", "function", "assertCertainError", "(", "error", ",", "expected_error_msg", ")", "{", "const", "message", "=", "error", ".", "message", ";", "const", "matchedIndex", "=", "message", ".", "search", "(", "expected_error_msg", ")", ";", "let", "matchedString", "=", "message", ";", "if", "(", "matchedIndex", ">=", "0", ")", "{", "matchedString", "=", "message", ".", "substring", "(", "matchedIndex", ",", "matchedIndex", "+", "expected_error_msg", ".", "length", ")", ";", "}", "expect", "(", "matchedString", ")", ".", "to", ".", "equal", "(", "expected_error_msg", ")", ";", "}"], "labels": [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "Error", null, "string", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], "url": "https://github.com/SetProtocol/set-protocol-strategies", "path": "set-protocol-strategies/utils/tokenAssertions.ts", "commit_hash": "0dd35abd235b85e09802ba5b0d9717d3c085bc86", "file": "tokenAssertions.ts"}
{"tokens": ["const", "Web3", "=", "require", "(", "'web3'", ")", ";", "const", "BigNumber", "=", "require", "(", "'bignumber.js'", ")", ";", "require", "(", "'dotenv'", ")", ".", "config", "(", "{", "path", ":", "'./.env'", "}", ")", ";", "import", "{", "version", "}", "from", "'../package.json'", ";", "import", "{", "Address", "}", "from", "'set-protocol-utils'", ";", "import", "{", "DEFAULT_GAS", ",", "NULL_ADDRESS", "}", "from", "'./constants'", ";", "const", "contract", "=", "require", "(", "'@truffle/contract'", ")", ";", "export", "const", "getWeb3", "=", "(", ")", "=>", "{", "let", "myWeb3", ";", "if", "(", "typeof", "web3", "!==", "'undefined'", ")", "{", "myWeb3", "=", "new", "Web3", "(", "web3", ".", "currentProvider", ")", ";", "}", "else", "{", "myWeb3", "=", "new", "Web3", "(", "new", "Web3", ".", "providers", ".", "HttpProvider", "(", "'http://localhost:8545'", ")", ")", ";", "}", "return", "myWeb3", ";", "}", ";", "export", "const", "getContractInstance", "=", "(", "artifact", ",", "contractAddress", "=", "artifact", ".", "address", ")", "=>", "{", "const", "web3", "=", "getWeb3", "(", ")", ";", "return", "new", "web3", ".", "eth", ".", "Contract", "(", "artifact", ".", "abi", ",", "contractAddress", ")", ";", "}", ";", "export", "const", "getGasUsageInEth", "=", "async", "(", "txHash", ")", "=>", "{", "const", "web3", "=", "getWeb3", "(", ")", ";", "const", "txReceipt", "=", "await", "web3", ".", "eth", ".", "getTransactionReceipt", "(", "txHash", ")", ";", "const", "txn", "=", "await", "web3", ".", "eth", ".", "getTransaction", "(", "txHash", ")", ";", "const", "{", "gasPrice", "}", "=", "txn", ";", "const", "{", "gasUsed", "}", "=", "txReceipt", ";", "return", "new", "BigNumber", "(", "gasPrice", ")", ".", "mul", "(", "gasUsed", ")", ";", "}", ";", "export", "const", "txnFrom", "=", "(", "from", ")", "=>", "{", "return", "{", "from", ",", "gas", ":", "DEFAULT_GAS", "}", ";", "}", ";", "export", "const", "blankTxn", "=", "async", "(", "from", ")", "=>", "{", "const", "web3", "=", "getWeb3", "(", ")", ";", "await", "web3", ".", "eth", ".", "sendTransaction", "(", "{", "from", ",", "to", ":", "NULL_ADDRESS", ",", "value", ":", "'1'", ",", "}", ")", ";", "}", ";", "export", "const", "linkLibrariesToDeploy", "=", "async", "(", "contract", ",", "libraries", ",", "from", ")", "=>", "{", "contract", ".", "setNetwork", "(", "50", ")", ";", "await", "Promise", ".", "all", "(", "libraries", ".", "map", "(", "async", "(", "library", ")", "=>", "{", "const", "truffleLibrary", "=", "await", "library", ".", "new", "(", "{", "from", "}", ")", ";", "if", "(", "process", ".", "env", ".", "IS_BUIDLER", "===", "'true'", ")", "{", "try", "{", "await", "contract", ".", "link", "(", "truffleLibrary", ")", ";", "}", "finally", "{", "return", ";", "}", "}", "else", "{", "await", "contract", ".", "link", "(", "library", ".", "contractName", ",", "truffleLibrary", ".", "address", ")", ";", "}", "}", ")", ")", ";", "}", ";", "export", "const", "importFromContracts", "=", "(", "contractName", ")", "=>", "{", "return", "importFromRepo", "(", "'set-protocol-contracts'", ",", "contractName", ")", ";", "}", ";", "const", "importFromRepo", "=", "(", "repoName", ",", "contractName", ")", "=>", "{", "const", "data", "=", "require", "(", "repoName", "+", "'/dist/artifacts/ts/'", "+", "contractName", ")", "[", "contractName", "]", ";", "const", "instance", "=", "contract", "(", "data", ")", ";", "instance", ".", "setProvider", "(", "web3", ".", "currentProvider", ")", ";", "return", "instance", ";", "}", ";", "export", "const", "importArtifactsFromSource", "=", "(", "contractName", ")", "=>", "{", "const", "web3", "=", "getWeb3", "(", ")", ";", "let", "instance", ";", "try", "{", "instance", "=", "artifacts", ".", "require", "(", "contractName", ")", ";", "return", "instance", ";", "}", "catch", "(", "e", ")", "{", "}", "try", "{", "const", "data", "=", "require", "(", "'set-protocol-strategies/dist/artifacts/ts/'", "+", "contractName", ")", "[", "contractName", "]", ";", "instance", "=", "contract", "(", "data", ")", ";", "instance", ".", "setProvider", "(", "web3", ".", "currentProvider", ")", ";", "return", "instance", ";", "}", "catch", "(", "e", ")", "{", "}", "try", "{", "const", "filePath", "=", "'set-protocol-strategies-'", "+", "version", "+", "'/dist/artifacts/ts/'", "+", "contractName", ";", "const", "data", "=", "require", "(", "filePath", ")", "[", "contractName", "]", ";", "instance", "=", "contract", "(", "data", ")", ";", "instance", ".", "setProvider", "(", "web3", ".", "currentProvider", ")", ";", "return", "instance", ";", "}", "catch", "(", "e", ")", "{", "}", "}", ";"], "labels": [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "string", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "string", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "string", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "array", null, "Address", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "string", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "string", null, "string", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "string", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], "url": "https://github.com/SetProtocol/set-protocol-strategies", "path": "set-protocol-strategies/utils/web3Helper.ts", "commit_hash": "0dd35abd235b85e09802ba5b0d9717d3c085bc86", "file": "web3Helper.ts"}
{"tokens": ["import", "{", "Address", ",", "Bytes", ",", "Log", "}", "from", "'set-protocol-utils'", ";", "export", "function", "LogInitialProposeCalled", "(", "rebalancingSetToken", ",", "contractAddress", ")", "{", "return", "[", "{", "event", ":", "'InitialProposeCalled'", ",", "address", ":", "contractAddress", ",", "args", ":", "{", "rebalancingSetToken", ",", "}", ",", "}", "]", ";", "}", "export", "function", "LogNewLiquidatorDataAdded", "(", "newLiquidatorData", ",", "oldLiquidatorData", ",", "contractAddress", ")", "{", "return", "[", "{", "event", ":", "'NewLiquidatorDataAdded'", ",", "address", ":", "contractAddress", ",", "args", ":", "{", "newLiquidatorData", ",", "oldLiquidatorData", ",", "}", ",", "}", "]", ";", "}"], "labels": [null, null, null, null, null, null, null, null, null, null, null, null, null, "array", null, "Address", null, "Address", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "array", null, "Bytes", null, "Bytes", null, "Address", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], "url": "https://github.com/SetProtocol/set-protocol-strategies", "path": "set-protocol-strategies/utils/contract_logs/assetPairManager.ts", "commit_hash": "0dd35abd235b85e09802ba5b0d9717d3c085bc86", "file": "assetPairManager.ts"}
{"tokens": ["import", "{", "Address", ",", "Log", "}", "from", "'set-protocol-utils'", ";", "interface", "NewCollateralArgs", "{", "_hash", ":", "Address", ";", "_collateralAddress", ":", "Address", ";", "}", "/********** Other Log Utilities **********/", "export", "function", "extractNewCollateralFromLogs", "(", "logs", ")", "{", "const", "createLog", "=", "logs", "[", "logs", ".", "length", "-", "1", "]", ";", "const", "args", "=", "createLog", ".", "args", ";", "return", "[", "args", ".", "_hash", ",", "args", ".", "_collateralAddress", "]", ";", "}", "export", "function", "LogNewCollateralTracked", "(", "_hash", ",", "_collateralAddress", ",", "_contractAddress", ")", "{", "return", "[", "{", "event", ":", "'NewCollateralTracked'", ",", "address", ":", "_contractAddress", ",", "args", ":", "{", "_hash", ",", "_collateralAddress", ",", "}", ",", "}", "]", ";", "}"], "labels": [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "array", null, "array", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "UNK", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "array", null, "string", null, "Address", null, "Address", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], "url": "https://github.com/SetProtocol/set-protocol-strategies", "path": "set-protocol-strategies/utils/contract_logs/binaryAllocator.ts", "commit_hash": "0dd35abd235b85e09802ba5b0d9717d3c085bc86", "file": "binaryAllocator.ts"}
{"tokens": ["import", "{", "BigNumber", "}", "from", "'bignumber.js'", ";", "import", "{", "Address", ",", "Log", "}", "from", "'set-protocol-utils'", ";", "interface", "CreateLogArgs", "{", "_setTokenAddress", ":", "Address", ";", "_factoryAddress", ":", "Address", ";", "_components", ":", "Address", "[", "]", ";", "_units", ":", "BigNumber", "[", "]", ";", "_naturalUnit", ":", "BigNumber", ";", "_name", ":", "string", ";", "_symbol", ":", "string", ";", "}", "/********** Other Log Utilities **********/", "export", "function", "extractNewSetTokenAddressFromLogs", "(", "logs", ",", "logIndex", "=", "1", ")", "{", "const", "createLog", "=", "logs", "[", "logs", ".", "length", "-", "logIndex", "]", ";", "const", "args", "=", "createLog", ".", "args", ";", "return", "args", ".", "_setTokenAddress", ";", "}"], "labels": [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "Address", null, "array", null, "number", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "UNK", null, null, null, null, null, null, null, null, null, null, null], "url": "https://github.com/SetProtocol/set-protocol-strategies", "path": "set-protocol-strategies/utils/contract_logs/core.ts", "commit_hash": "0dd35abd235b85e09802ba5b0d9717d3c085bc86", "file": "core.ts"}
{"tokens": ["import", "{", "Address", ",", "Log", "}", "from", "'set-protocol-utils'", ";", "import", "{", "BigNumber", "}", "from", "'bignumber.js'", ";", "export", "function", "LogManagerProposal", "(", "riskAssetPrice", ",", "movingAveragePrice", ",", "contractAddress", ")", "{", "return", "[", "{", "event", ":", "'LogManagerProposal'", ",", "address", ":", "contractAddress", ",", "args", ":", "{", "riskAssetPrice", ",", "movingAveragePrice", ",", "}", ",", "}", "]", ";", "}"], "labels": [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "array", null, "BigNumber", null, "BigNumber", null, "Address", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], "url": "https://github.com/SetProtocol/set-protocol-strategies", "path": "set-protocol-strategies/utils/contract_logs/macoStrategyManager.ts", "commit_hash": "0dd35abd235b85e09802ba5b0d9717d3c085bc86", "file": "macoStrategyManager.ts"}
{"tokens": ["import", "{", "Address", ",", "Log", "}", "from", "'set-protocol-utils'", ";", "import", "{", "BigNumber", "}", "from", "'bignumber.js'", ";", "export", "function", "LogTradingPoolCreated", "(", "trader", ",", "allocator", ",", "tradingPool", ",", "startingAllocation", ",", "contractAddress", ")", "{", "return", "[", "{", "event", ":", "'TradingPoolCreated'", ",", "address", ":", "contractAddress", ",", "args", ":", "{", "trader", ",", "allocator", ",", "tradingPool", ",", "startingAllocation", ",", "}", ",", "}", "]", ";", "}", "export", "function", "LogAllocationUpdate", "(", "tradingPool", ",", "oldAllocation", ",", "newAllocation", ",", "contractAddress", ")", "{", "return", "[", "{", "event", ":", "'AllocationUpdate'", ",", "address", ":", "contractAddress", ",", "args", ":", "{", "tradingPool", ",", "oldAllocation", ",", "newAllocation", ",", "}", ",", "}", "]", ";", "}", "export", "function", "LogNewTrader", "(", "tradingPool", ",", "oldTrader", ",", "newTrader", ",", "contractAddress", ")", "{", "return", "[", "{", "event", ":", "'NewTrader'", ",", "address", ":", "contractAddress", ",", "args", ":", "{", "tradingPool", ",", "oldTrader", ",", "newTrader", ",", "}", ",", "}", "]", ";", "}"], "labels": [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "array", null, "Address", null, "Address", null, "Address", null, "BigNumber", null, "Address", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "array", null, "Address", null, "BigNumber", null, "BigNumber", null, "Address", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "array", null, "Address", null, "Address", null, "Address", null, "Address", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], "url": "https://github.com/SetProtocol/set-protocol-strategies", "path": "set-protocol-strategies/utils/contract_logs/socialTradingManager.ts", "commit_hash": "0dd35abd235b85e09802ba5b0d9717d3c085bc86", "file": "socialTradingManager.ts"}
{"tokens": ["import", "*", "as", "_", "from", "'lodash'", ";", "import", "{", "Address", "}", "from", "'set-protocol-utils'", ";", "import", "{", "BigNumber", "}", "from", "'bignumber.js'", ";", "import", "{", "StandardTokenMockContract", ",", "WethMockContract", ",", "}", "from", "'set-protocol-contracts'", ";", "import", "{", "USDCMockContract", ",", "}", "from", "'../contracts'", ";", "import", "{", "DEFAULT_GAS", ",", "DEFAULT_MOCK_TOKEN_DECIMALS", ",", "DEPLOYED_TOKEN_QUANTITY", ",", "UNLIMITED_ALLOWANCE_IN_BASE_UNITS", ",", "}", "from", "'../constants'", ";", "import", "{", "getContractInstance", ",", "importArtifactsFromSource", "}", "from", "'../web3Helper'", ";", "const", "USDCMock", "=", "importArtifactsFromSource", "(", "'USDCMock'", ")", ";", "const", "StandardTokenMock", "=", "importArtifactsFromSource", "(", "'StandardTokenMock'", ")", ";", "export", "class", "ERC20Helper", "{", "private", "_senderAccountAddress", ":", "Address", ";", "constructor", "(", "senderAccountAddress", ")", "{", "this", ".", "_senderAccountAddress", "=", "senderAccountAddress", ";", "}", "public", "async", "approveTransferAsync", "(", "token", ",", "to", ",", "from", "=", "this", ".", "_senderAccountAddress", ")", "{", "await", "this", ".", "approveTransfersAsync", "(", "[", "token", "]", ",", "to", ",", "from", ")", ";", "}", "public", "async", "approveTransfersAsync", "(", "tokens", ",", "to", ",", "from", "=", "this", ".", "_senderAccountAddress", ")", "{", "const", "approvePromises", "=", "_", ".", "map", "(", "tokens", ",", "token", "=>", "token", ".", "approve", ".", "sendTransactionAsync", "(", "to", ",", "UNLIMITED_ALLOWANCE_IN_BASE_UNITS", ",", "{", "from", "}", ")", ")", ";", "await", "Promise", ".", "all", "(", "approvePromises", ")", ";", "}", "public", "async", "transferTokenAsync", "(", "token", ",", "to", ",", "quantity", ",", "from", "=", "this", ".", "_senderAccountAddress", ")", "{", "await", "this", ".", "transferTokensAsync", "(", "[", "token", "]", ",", "to", ",", "quantity", ",", "from", ")", ";", "}", "public", "async", "transferTokensAsync", "(", "tokens", ",", "to", ",", "amount", ",", "from", "=", "this", ".", "_senderAccountAddress", ")", "{", "const", "transferPromises", "=", "_", ".", "map", "(", "tokens", ",", "token", "=>", "token", ".", "transfer", ".", "sendTransactionAsync", "(", "to", ",", "amount", ",", "{", "from", ",", "gas", ":", "100000", "}", ")", ")", ";", "await", "Promise", ".", "all", "(", "transferPromises", ")", ";", "}", "public", "async", "getTokenBalances", "(", "tokens", ",", "owner", ")", "{", "const", "balancePromises", "=", "_", ".", "map", "(", "tokens", ",", "token", "=>", "token", ".", "balanceOf", ".", "callAsync", "(", "owner", ")", ")", ";", "let", "balances", ";", "await", "Promise", ".", "all", "(", "balancePromises", ")", ".", "then", "(", "fetchedTokenBalances", "=>", "{", "balances", "=", "fetchedTokenBalances", ";", "}", ")", ";", "return", "balances", ";", "}", "public", "async", "getTokenAllowances", "(", "tokens", ",", "owner", ",", "spender", ")", "{", "const", "allowancePromises", "=", "_", ".", "map", "(", "tokens", ",", "token", "=>", "token", ".", "allowance", ".", "callAsync", "(", "owner", ",", "spender", ")", ")", ";", "let", "allowances", ";", "await", "Promise", ".", "all", "(", "allowancePromises", ")", ".", "then", "(", "fetchedAllowances", "=>", "{", "allowances", "=", "fetchedAllowances", ";", "}", ")", ";", "return", "allowances", ";", "}", "public", "async", "retrieveTokenInstancesAsync", "(", "tokens", ")", "{", "const", "tokenPromises", "=", "_", ".", "map", "(", "tokens", ",", "tokenAddress", "=>", "new", "StandardTokenMockContract", "(", "getContractInstance", "(", "StandardTokenMock", ",", "tokenAddress", ")", ",", "{", "from", ":", "this", ".", "_senderAccountAddress", "}", ")", ")", ";", "return", "tokenPromises", ";", "}", "public", "async", "getTokenInstanceAsync", "(", "token", ")", "{", "return", "new", "StandardTokenMockContract", "(", "getContractInstance", "(", "StandardTokenMock", ",", "token", ")", ",", "{", "from", ":", "this", ".", "_senderAccountAddress", "}", ")", ";", "}", "public", "async", "deployUSDCTokenAsync", "(", "initialAccount", ",", "initialTokenAmount", "=", "DEPLOYED_TOKEN_QUANTITY", ")", "{", "const", "truffleMockToken", "=", "await", "USDCMock", ".", "new", "(", "initialAccount", ",", "initialTokenAmount", ",", "'Mock Token'", ",", "'MOCK'", ",", "{", "from", ":", "this", ".", "_senderAccountAddress", ",", "gas", ":", "DEFAULT_GAS", "}", ")", ";", "return", "new", "USDCMockContract", "(", "getContractInstance", "(", "truffleMockToken", ")", ",", "{", "from", ":", "this", ".", "_senderAccountAddress", ",", "gas", ":", "DEFAULT_GAS", "}", ")", ";", "}", "public", "async", "deployTokenAsync", "(", "initialAccount", ",", "decimals", "=", "DEFAULT_MOCK_TOKEN_DECIMALS", ",", "initialTokenAmount", "=", "DEPLOYED_TOKEN_QUANTITY", ")", "{", "const", "truffleMockToken", "=", "await", "StandardTokenMock", ".", "new", "(", "initialAccount", ",", "initialTokenAmount", ",", "'Mock Token'", ",", "'MOCK'", ",", "decimals", ",", "{", "from", ":", "this", ".", "_senderAccountAddress", ",", "gas", ":", "DEFAULT_GAS", "}", ")", ";", "return", "new", "StandardTokenMockContract", "(", "new", "web3", ".", "eth", ".", "Contract", "(", "truffleMockToken", ".", "abi", ",", "truffleMockToken", ".", "address", ")", ",", "{", "from", ":", "this", ".", "_senderAccountAddress", "}", ")", ";", "}", "}"], "labels": [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "Address", null, null, null, null, null, null, null, null, null, null, null, null, null, "UNK", null, "Address", null, "Address", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "array", null, "Address", null, "Address", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "UNK", null, "Address", null, "BigNumber", null, "Address", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "array", null, "Address", null, "BigNumber", null, "Address", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "Promise", null, "array", null, "Address", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "array", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "Promise", null, "array", null, "Address", null, "Address", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "array", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "Promise", null, "array", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "Promise", null, "Address", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "Promise", null, "Address", null, "BigNumber", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "Promise", null, "Address", null, "number", null, null, null, "BigNumber", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], "url": "https://github.com/SetProtocol/set-protocol-strategies", "path": "set-protocol-strategies/utils/helpers/erc20Helper.ts", "commit_hash": "0dd35abd235b85e09802ba5b0d9717d3c085bc86", "file": "erc20Helper.ts"}
{"tokens": ["import", "{", "Address", "}", "from", "'set-protocol-utils'", ";", "import", "{", "AllocatorMathLibraryMockContract", ",", "FlexibleTimingManagerLibraryMockContract", ",", "UintArrayUtilsLibraryMockContract", ",", "}", "from", "'../contracts'", ";", "import", "{", "getContractInstance", ",", "importArtifactsFromSource", ",", "txnFrom", ",", "}", "from", "'../web3Helper'", ";", "const", "AllocatorMathLibraryMock", "=", "importArtifactsFromSource", "(", "'AllocatorMathLibraryMock'", ")", ";", "const", "FlexibleTimingManagerLibraryMock", "=", "importArtifactsFromSource", "(", "'FlexibleTimingManagerLibraryMock'", ")", ";", "const", "UintArrayUtilsLibrary", "=", "importArtifactsFromSource", "(", "'UintArrayUtilsLibrary'", ")", ";", "const", "UintArrayUtilsLibraryMock", "=", "importArtifactsFromSource", "(", "'UintArrayUtilsLibraryMock'", ")", ";", "export", "class", "LibraryMockHelper", "{", "private", "_contractOwnerAddress", ":", "Address", ";", "constructor", "(", "contractOwnerAddress", ")", "{", "this", ".", "_contractOwnerAddress", "=", "contractOwnerAddress", ";", "}", "public", "async", "deployFlexibleTimingManagerLibraryMockAsync", "(", "from", "=", "this", ".", "_contractOwnerAddress", ")", "{", "const", "managerLibraryMockContract", "=", "await", "FlexibleTimingManagerLibraryMock", ".", "new", "(", "txnFrom", "(", "from", ")", ")", ";", "return", "new", "FlexibleTimingManagerLibraryMockContract", "(", "getContractInstance", "(", "managerLibraryMockContract", ")", ",", "txnFrom", "(", "from", ")", ")", ";", "}", "public", "async", "deployAllocatorMathLibraryAsync", "(", "from", "=", "this", ".", "_contractOwnerAddress", ")", "{", "const", "mathHelperMockContract", "=", "await", "AllocatorMathLibraryMock", ".", "new", "(", "txnFrom", "(", "from", ")", ")", ";", "return", "new", "AllocatorMathLibraryMockContract", "(", "getContractInstance", "(", "mathHelperMockContract", ")", ",", "txnFrom", "(", "from", ")", ")", ";", "}", "public", "async", "deployUintArrayUtilsLibraryAsync", "(", "from", "=", "this", ".", "_contractOwnerAddress", ")", "{", "await", "this", ".", "linkUintArrayUtilsLibraryAsync", "(", "UintArrayUtilsLibraryMock", ")", ";", "const", "mathHelperMockContract", "=", "await", "UintArrayUtilsLibraryMock", ".", "new", "(", "txnFrom", "(", "from", ")", ")", ";", "return", "new", "UintArrayUtilsLibraryMockContract", "(", "getContractInstance", "(", "mathHelperMockContract", ")", ",", "txnFrom", "(", "from", ")", ")", ";", "}", "public", "async", "linkUintArrayUtilsLibraryAsync", "(", "contract", ")", "{", "const", "truffleUintArrayUtilsLibrary", "=", "await", "UintArrayUtilsLibrary", ".", "new", "(", "{", "from", ":", "this", ".", "_contractOwnerAddress", "}", ")", ";", "await", "contract", ".", "link", "(", "'UintArrayUtilsLibrary'", ",", "truffleUintArrayUtilsLibrary", ".", "address", ")", ";", "}", "}"], "labels": [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "Address", null, null, null, null, null, null, null, null, null, null, null, "Promise", null, "Address", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "Promise", null, "Address", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "Promise", null, "Address", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, "Promise", null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null], "url": "https://github.com/SetProtocol/set-protocol-strategies", "path": "set-protocol-strategies/utils/helpers/libraryMockHelper.ts", "commit_hash": "0dd35abd235b85e09802ba5b0d9717d3c085bc86", "file": "libraryMockHelper.ts"}
